interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Org implements Node {
  id: ID!
  uid: ID!
  name: String!
  users(first: Int, after: String, last: Int, before: String): UserConnection
}

type UserConnection {
  edges: [UserEdge]
  pageInfo: PageInfo!
}

type UserEdge {
  cursor: String!
  node: User
}

type OrgConnection {
  edges: [OrgEdge]
  pageInfo: PageInfo!
  ctx: String
}

type OrgEdge {
  cursor: String!
  node: Org
}

type User implements Node {
  id: ID!
  uid: ID!
  pid: ID!
  name: String!
}

type Device {
  id: ID!
  name: String
}

type Sensor {
  id: ID!
  pid: ID!
  name: String!
}

type DeviceConnection {
  items: [Device]
  nextToken: String
}

type SensorConnection {
  items: [Sensor!]
  nextToken: String
}

type Building implements Node {
  id: ID!
  name: String!
  rooms(first: Int, after: String, last: Int, before: String): RoomConnection
}

type BuildingConnection {
  edges: [BuildingEdge]
  pageInfo: PageInfo!
  ctx: String
}

type BuildingEdge {
  cursor: String!
  node: Building
}

type Room implements Node {
  id: ID!
  name: String!
}

type RoomConnection {
  edges: [RoomEdge]
  pageInfo: PageInfo!
  ctx: String
}

type RoomEdge {
  cursor: String!
  node: Room
}

type Mutation {
  createOrg(name: String!): Org
  createUser(orgId: ID!, name: String!): User
  createDevice(name: String!): Device
  createSensor(deviceId: ID!, name: String!): Sensor
  putBuilding(name: String!): Building
  putRoom(buildingId: ID!, name: String!): Room
}

type Query {
  getDevice(id: ID!, limit: Int): Device
  getDeviceFn(id: ID!): Device
  listDevices: [Device]
  getDeviceSensors(deviceId: ID!, limit: Int, nextToken: String): SensorConnection
  getOrg(uid: ID!): Org
  getOrgs(first: Int, after: String, last: Int, before: String): OrgConnection
  getBuilding(id: ID!): Building
  getBuildings(first: Int, after: String, last: Int, before: String): BuildingConnection
  getRooms(first: Int, after: String, last: Int, before: String): RoomConnection
  org(id: ID!): Org
  room(id: ID!): Room
  node(id: ID!): Node
}

schema {
  query: Query
  mutation: Mutation
}
